"""empty message

Revision ID: 132b252067c3
Revises: 926ecd384504
Create Date: 2019-08-26 21:38:00.548240

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "132b252067c3"
down_revision = "926ecd384504"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "products",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_products_id"), "products", ["id"], unique=False)
    op.create_index(op.f("ix_products_name"), "products", ["name"], unique=True)
    op.create_table(
        "products_to_tags",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("amount", sa.Integer(), nullable=True),
        sa.Column("product_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("tag_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(["product_id"], ["products.id"]),
        sa.ForeignKeyConstraint(["tag_id"], ["tags.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_products_to_tags_id"), "products_to_tags", ["id"], unique=False)
    op.create_index(op.f("ix_products_to_tags_product_id"), "products_to_tags", ["product_id"], unique=False)
    op.create_index(op.f("ix_products_to_tags_tag_id"), "products_to_tags", ["tag_id"], unique=False)
    op.create_table(
        "products_to_categories",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("amount", sa.Integer(), nullable=True),
        sa.Column("product_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("category_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(["category_id"], ["categories.id"]),
        sa.ForeignKeyConstraint(["product_id"], ["products.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_products_to_categories_category_id"), "products_to_categories", ["category_id"], unique=False
    )
    op.create_index(op.f("ix_products_to_categories_id"), "products_to_categories", ["id"], unique=False)
    op.create_index(
        op.f("ix_products_to_categories_product_id"), "products_to_categories", ["product_id"], unique=False
    )
    op.drop_index("ix_item_tags_id", table_name="item_tags")
    op.drop_index("ix_item_tags_item_id", table_name="item_tags")
    op.drop_index("ix_item_tags_tag_id", table_name="item_tags")
    op.drop_table("item_tags")
    op.drop_index("ix_items_id", table_name="items")
    op.drop_index("ix_items_name", table_name="items")
    op.drop_table("items")
    op.drop_index("ix_shop_categories_id", table_name="shop_categories")
    op.drop_index("ix_shop_categories_item_id", table_name="shop_categories")
    op.drop_index("ix_shop_categories_shop_id", table_name="shop_categories")
    op.drop_table("shop_categories")
    op.add_column("categories", sa.Column("shop_id", postgresql.UUID(as_uuid=True), nullable=True))
    op.create_index(op.f("ix_categories_shop_id"), "categories", ["shop_id"], unique=False)
    op.create_foreign_key(None, "categories", "shops", ["shop_id"], ["id"])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "categories", type_="foreignkey")
    op.drop_index(op.f("ix_categories_shop_id"), table_name="categories")
    op.drop_column("categories", "shop_id")
    op.create_table(
        "shop_categories",
        sa.Column("id", postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column("item_id", postgresql.UUID(), autoincrement=False, nullable=True),
        sa.Column("shop_id", postgresql.UUID(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(["item_id"], ["categories.id"], name="shop_categories_item_id_fkey"),
        sa.ForeignKeyConstraint(["shop_id"], ["shops.id"], name="shop_categories_shop_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="shop_categories_pkey"),
    )
    op.create_index("ix_shop_categories_shop_id", "shop_categories", ["shop_id"], unique=False)
    op.create_index("ix_shop_categories_item_id", "shop_categories", ["item_id"], unique=False)
    op.create_index("ix_shop_categories_id", "shop_categories", ["id"], unique=False)
    op.create_table(
        "items",
        sa.Column("id", postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("price", postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column("category_id", postgresql.UUID(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(["category_id"], ["categories.id"], name="items_category_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="items_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index("ix_items_name", "items", ["name"], unique=True)
    op.create_index("ix_items_id", "items", ["id"], unique=False)
    op.create_table(
        "item_tags",
        sa.Column("id", postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column("amount", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("item_id", postgresql.UUID(), autoincrement=False, nullable=True),
        sa.Column("tag_id", postgresql.UUID(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(["item_id"], ["items.id"], name="item_tags_item_id_fkey"),
        sa.ForeignKeyConstraint(["tag_id"], ["tags.id"], name="item_tags_tag_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="item_tags_pkey"),
    )
    op.create_index("ix_item_tags_tag_id", "item_tags", ["tag_id"], unique=False)
    op.create_index("ix_item_tags_item_id", "item_tags", ["item_id"], unique=False)
    op.create_index("ix_item_tags_id", "item_tags", ["id"], unique=False)
    op.drop_index(op.f("ix_products_to_categories_product_id"), table_name="products_to_categories")
    op.drop_index(op.f("ix_products_to_categories_id"), table_name="products_to_categories")
    op.drop_index(op.f("ix_products_to_categories_category_id"), table_name="products_to_categories")
    op.drop_table("products_to_categories")
    op.drop_index(op.f("ix_products_to_tags_tag_id"), table_name="products_to_tags")
    op.drop_index(op.f("ix_products_to_tags_product_id"), table_name="products_to_tags")
    op.drop_index(op.f("ix_products_to_tags_id"), table_name="products_to_tags")
    op.drop_table("products_to_tags")
    op.drop_index(op.f("ix_products_name"), table_name="products")
    op.drop_index(op.f("ix_products_id"), table_name="products")
    op.drop_table("products")
    # ### end Alembic commands ###
